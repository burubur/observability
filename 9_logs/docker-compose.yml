networks:
  experiment:
    driver: bridge

services:
  microservice:
    build: .
    container_name: microservice
    ports:
      - "1000:1000"
    depends_on:
      - logstash
      - kibana
    entrypoint: ["/opt/entrypoint.sh", "/opt/microservice"]
    networks:
      - experiment

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # prometheus config
      - ./docker:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - experiment
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./docker/grafana/data:/var/lib/grafana # to ensure grafana data won't gone if container restarted
    networks:
      - experiment

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - experiment

  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.2
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
      - "5044:5044"
    networks:
      - experiment

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - experiment
